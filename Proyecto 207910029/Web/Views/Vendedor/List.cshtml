@model IEnumerable<Infraestructure.Models.Vendedor>

@{
    ViewBag.Title = "Lista Vendedores";
}

<h2>Vendedores</h2>

<p>
    @Html.ActionLink("Crear Nuevo", "Create", null, htmlAttributes: new { @class = "btn btn-success glyphicon-plus" })
</p>
<table class="table table-hover">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.CedulaJuridica)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ente)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Telefono)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Direccion)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.CedulaJuridica)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Ente)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Email)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Telefono)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Direccion)
    </td>
    <td>
        @Html.ActionLink("Editar", "Edit", new { id = item.CedulaJuridica }, htmlAttributes: new { @class = "btn btn-primary" })
        @Html.ActionLink("Detalles", "Details", new { id = item.CedulaJuridica }, htmlAttributes: new { @class = "btn btn-warning" })
        @Html.ActionLink("Borrar", "Delete", new { id = item.CedulaJuridica }, htmlAttributes: new { @class = "btn btn-danger" })
    </td>
</tr>
    }

</table>
@section Scripts {
    @Scripts.Render("~/bundles/toastjs")
    @Scripts.Render("~/bundles/jqueryui")
    



    <script>

        $(document).ready(function () {
             console.log("Entro a JQuery")


            toastr.options = {
                "closeButton": false,
                "debug": false,
                "newestOnTop": false,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "400",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "5000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }

                // Recibe los parámetros del Controller
                var option = '@TempData["Action"]'
                var message = '@TempData["Message"]'


                if (option == 'S') {
                    toastr.success("El registro fue salvado correctamente");
                }


                 if (option == 'D') {
                    toastr.success("El registro fue borrado correctamente");
                }


                 if (option == 'U') {
                    toastr.success("El registro fue actualizado correctamente");
                }

                if (option == 'E') {
                    toastr.warning("Se ha producido un error :"+message);
            }


            // Cambiar el color del fondo del Grid.
            //$(".table tbody tr:even").css("background-color", "#ddd");
        });



    </script>


    <script>
        function modalDetail(p) {
            // Almacena el Id del estudiante en el hidden field tipo variable global
            $("#campoOculto").val(p);
            // $("#myModal").val(p);
            //var temp = $("#campoOculto").val();
            // Invoca al Div de Modal de una vez se invoca el evento shown.bs.modal
            // donde se invoca al Ajax con el Partial View
            $("#myModal").modal();
        }
    </script>



    <script>


        // Este evento se ejecuta antes después de invocar  $("#myModal").modal();
        // acá es donde se invoca por Ajax al Controller y este devuelve Partial View
        $('#myModal').on('shown.bs.modal', function () {
            // permite mover
            $('.modal-dialog').draggable();
            // Se lee el campo oculto
            var identificacionEstudiante = $("#campoOculto").val();
            //var identificacionEstudiante = $("#myModal").val();
            console.log(identificacionEstudiante);
            $.ajax({
                type: "GET",
                url: "/Estudiante/AjaxFilterDetails/",
                // parametro por JSON
                data: { id: identificacionEstudiante },
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $(".modal-body").html(data);
                },
                // Capturar errores y mostrar un mensaje de error
                error: function (xhr, status, error) {
                    var mensaje = "<div class='alert alert-danger' role='alert'> Result: " +
                        status + " " + error + " " + xhr.status + " " + xhr.statusText + "</div>";
                    //debugger;
                    $("#mensaje").html(mensaje).show("slow").delay(1000).hide("slow");
                }
            });

        })

        // Se ejecuta cuando se destruye el modal
        $("#myModal").on('hide.bs.modal', function () {
            // Se limpia el Div para no dejar
            $(".modal-body").html("...");
        });

    </script>


}