@model Infraestructure.Models.Aseguradora

@{
    ViewBag.Title = "Editar Aseguradora";
}

<h2>Edit</h2>
@if (TempData["Message"] != null)
{
    string mensaje = @"<div class='alert alert-danger alert-dismissible' role='alert'><button type='button' class='close' data-dismiss='alert' aria-label='Close'>
<span aria-hidden='true'>&times;</span> </button>
<strong>Error!</strong> " + TempData["Message"] + " </div>";

@Html.Raw(mensaje);
}

@using (Html.BeginForm("Save", "Aseguradora",FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Aseguradora</h4>
    <hr />
   
    @Html.HiddenFor(model => model.Id)


    <div class="form-group">
        @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-12">
            <input type="submit" value="Actualizar" class="btn btn-primary btn-block pull-left" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Volver a la lista", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
